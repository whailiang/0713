/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -a runtime_adaptor.h: ../org.kylin.runtime.xml
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef RUNTIME_ADAPTOR_H
#define RUNTIME_ADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface com.kylin.runtime.interface
 */
class InterfaceAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.kylin.runtime.interface")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.kylin.runtime.interface\">\n"
"    <signal name=\"app_start\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"app_info\"/>\n"
"    </signal>\n"
"    <signal name=\"run_app_reply\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"reply\"/>\n"
"    </signal>\n"
"    <signal name=\"kill_app\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"app_info\"/>\n"
"    </signal>\n"
"    <method name=\"exec_command\">\n"
"      <arg direction=\"in\" type=\"av\" name=\"app_info\"/>\n"
"    </method>\n"
"    <method name=\"set_platform_app_status\">\n"
"      <arg direction=\"in\" type=\"av\" name=\"platform_status\"/>\n"
"    </method>\n"
"    <method name=\"test\"/>\n"
"    <method name=\"daemon_ready\">\n"
"      <arg direction=\"in\" type=\"av\" name=\"app_cmd_andapp_platform\"/>\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    InterfaceAdaptor(QObject *parent);
    virtual ~InterfaceAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
    void daemon_ready(const QVariantList &app_cmd_andapp_platform);
    void exec_command(const QVariantList &app_info);
    void set_platform_app_status(const QVariantList &platform_status);
    void test();
Q_SIGNALS: // SIGNALS
    void app_start(const QString &app_info);
    void kill_app(const QString &app_info);
    void run_app_reply(const QString &reply);
};

#endif
