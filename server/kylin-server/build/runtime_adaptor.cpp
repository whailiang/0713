/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -i runtime_adaptor.h -a :runtime_adaptor.cpp ../org.kylin.runtime.xml
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "runtime_adaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class InterfaceAdaptor
 */

InterfaceAdaptor::InterfaceAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

InterfaceAdaptor::~InterfaceAdaptor()
{
    // destructor
}

void InterfaceAdaptor::daemon_ready(const QVariantList &app_cmd_andapp_platform)
{
    // handle method call com.kylin.runtime.interface.daemon_ready
    QMetaObject::invokeMethod(parent(), "daemon_ready", Q_ARG(QVariantList, app_cmd_andapp_platform));
}

void InterfaceAdaptor::exec_command(const QVariantList &app_info)
{
    // handle method call com.kylin.runtime.interface.exec_command
    QMetaObject::invokeMethod(parent(), "exec_command", Q_ARG(QVariantList, app_info));
}

void InterfaceAdaptor::set_platform_app_status(const QVariantList &platform_status)
{
    // handle method call com.kylin.runtime.interface.set_platform_app_status
    QMetaObject::invokeMethod(parent(), "set_platform_app_status", Q_ARG(QVariantList, platform_status));
}

void InterfaceAdaptor::test()
{
    // handle method call com.kylin.runtime.interface.test
    QMetaObject::invokeMethod(parent(), "test");
}

